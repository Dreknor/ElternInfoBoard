<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\ListenController
 */
class ListenControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function activate_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('listen/{liste}/activate');

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('listen/create');

        $response->assertOk();
        $response->assertViewIs('listen.create');
        $response->assertViewHas('gruppen');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function deactivate_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('listen/{liste}/deactivate');

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('listen/{terminListe}/edit');

        $response->assertOk();
        $response->assertViewIs('listen.edit');
        $response->assertViewHas('liste');
        $response->assertViewHas('gruppen');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('listen');

        $response->assertOk();
        $response->assertViewIs('listen.index');
        $response->assertViewHas('listen');
        $response->assertViewHas('eintragungen');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function pdf_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('listen/{liste}/export');

        $response->assertOk();
        $response->assertViewIs('listen.listenExport');
        $response->assertViewHas('Liste');
        $response->assertViewHas('listentermine');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('listen/{terminListe}');

        $response->assertOk();
        $response->assertViewIs('listen.terminAuswahl');
        $response->assertViewHas('liste');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post('listen', [
            // TODO: send request data
        ]);

        $response->assertRedirect(url("listen/{$Liste->id}"));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->put('listen/{terminListe}', [
            // TODO: send request data
        ]);

        $response->assertRedirect(to(url('listen')));

        // TODO: perform additional assertions
    }

    // test cases...
}
