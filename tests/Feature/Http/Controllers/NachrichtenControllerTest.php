<?php

namespace Tests\Feature\Http\Controllers;

use Tests\TestCase;

/**
 * @see \App\Http\Controllers\NachrichtenController
 */
class NachrichtenControllerTest extends TestCase
{
    /**
     * @test
     */
    public function archiv_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('posts/archiv/{posts}');

        $response->assertRedirect('/home');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('posts/create');

        $response->assertRedirect('/home');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function delete_trashed_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('settings/post/{post}/destroy');

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->delete('posts/{posts}');

        $response->assertOk();
        $this->assertModelMissing($posts);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('posts/edit/{posts}');

        $response->assertRedirect('/home');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function email_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('email/{daily}/{id?}');

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('home');

        $response->assertOk();
        $response->assertViewIs('home');
        $response->assertViewHas('datum');
        $response->assertViewHas('archiv');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function posts_archiv_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('archiv');

        $response->assertOk();
        $response->assertViewIs('archiv.archiv');
        $response->assertViewHas('nachrichten');
        $response->assertViewHas('user');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function release_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('posts/release/{posts}');

        $response->assertRedirect('/home');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function stick_post_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('posts/stick/{post}');

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post('posts', [
            // TODO: send request data
        ]);

        $response->assertRedirect('/home');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \App\Http\Controllers\NachrichtenController::class,
            'store',
            \App\Http\Requests\createNachrichtRequest::class
        );
    }

    /**
     * @test
     */
    public function store_comment_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post('nachricht/{posts}/comment/create', [
            // TODO: send request data
        ]);

        $response->assertRedirect(url('/home#'.$posts->id));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function storecomment_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \App\Http\Controllers\NachrichtenController::class,
            'storeComment',
            \App\Http\Requests\CommentPostRequest::class
        );
    }

    /**
     * @test
     */
    public function touch_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('posts/touch/{posts}');

        $response->assertRedirect(url('/'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->put('posts/{posts}/{kiosk?}', [
            // TODO: send request data
        ]);

        $response->assertRedirect('/home');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \App\Http\Controllers\NachrichtenController::class,
            'update',
            \App\Http\Requests\editPostRequest::class
        );
    }

    // test cases...
}
