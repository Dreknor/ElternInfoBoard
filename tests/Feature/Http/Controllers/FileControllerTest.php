<?php

namespace Tests\Feature\Http\Controllers;

use Tests\TestCase;

/**
 * @see \App\Http\Controllers\FileController
 */
class FileControllerTest extends TestCase
{
    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('files/create');

        $response->assertOk();
        $response->assertViewIs('files.create');
        $response->assertViewHas('groups');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function delete_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->delete('file/{file}');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function delete_unused_files_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->delete('settings/removeUnusedFiles');

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('settings/file/{file}/destroy');

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('files');

        $response->assertOk();
        $response->assertViewIs('files.indexVerwaltung');
        $response->assertViewHas('gruppen');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function remove_old_files_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->delete('settings/removeFiles');

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function removeoldfiles_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \App\Http\Controllers\FileController::class,
            'removeOldFiles',
            \App\Http\Requests\DeleteFilesRequest::class
        );
    }

    /**
     * @test
     */
    public function save_file_rueckmeldung_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post('rueckmeldung/{posts}/saveFile', [
            // TODO: send request data
        ]);

        $response->assertRedirect(url('home/'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_scan_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get('settings/scan');

        $response->assertOk();
        $response->assertViewIs('settings.scanDir');
        $response->assertViewHas('media');
        $response->assertViewHas('oldMedia');
        $response->assertViewHas('deletedPosts');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post('files', [
            // TODO: send request data
        ]);

        $response->assertRedirect('/home');

        // TODO: perform additional assertions
    }

    // test cases...
}
