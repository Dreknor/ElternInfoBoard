name: Benutzer
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/token/create
    metadata:
      groupName: Benutzer
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle user login and generate an authentication token.'
      description: 'The token is used to authenticate the user in subsequent requests.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: ova.blanda@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: '>b4>E-$_MEWBs1'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      device_name:
        name: device_name
        description: 'The name of the device.'
        required: true
        example: vero
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: ova.blanda@example.net
      password: '>b4>E-$_MEWBs1'
      device_name: vero
    fileParameters: []
    responses: []
    responseFields:
      token:
        name: token
        description: 'The authentication token.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z86VP3hbe4E1dvaD6fkagc5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/me
    metadata:
      groupName: Benutzer
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User information.'
      description: "Get the authenticated user's information."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields:
      user:
        name: user
        description: "The authenticated user's information."
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer a8haDgk1Vbf63ZPc54vd6Ee'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/token/logout
    metadata:
      groupName: Benutzer
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout the authenticated user.'
      description: 'The user is logged out and the authentication token is revoked.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields:
      message:
        name: message
        description: 'A message indicating that the user has been logged out.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer E138gacaPe4ZdVhbkvD66f5'
    controller: null
    method: null
    route: null
    custom: []
